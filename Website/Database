DROP DATABASE userdb;
CREATE DATABASE userdb;
USE userdb;
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(256) NOT NULL,
    password VARCHAR(256) NOT NULL,
    email VARCHAR(256) NOT NULL,
    privileges VARCHAR(256) DEFAULT 'user'
);
CREATE TABLE profiles (
    id INT(128) AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    profession VARCHAR(256) DEFAULT '',
    about_me VARCHAR(256) DEFAULT '',
    rating INT(8) DEFAULT 0,
    rating_quantity INT(128) DEFAULT 0,
    jobs_completed INT(128) DEFAULT 0,
    skills VARCHAR(256) DEFAULT '',
    education VARCHAR(256) DEFAULT '',
    work_experience VARCHAR(256) DEFAULT '',
    helped INT(128) DEFAULT 0
);
CREATE TABLE posts (
    id INT(128) AUTO_INCREMENT PRIMARY KEY NOT NULL,
    user_id INT(128),
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    name VARCHAR(256) NOT NULL,
    details VARCHAR(256)NOT NULL,
    category VARCHAR(128) NOT NULL,
    spec VARCHAR(128) NOT NULL,
    visability VARCHAR(8) DEFAULT 'v',
    type VARCHAR(32) NOT NULL,
    pay_min int(128) NOT NULL,
    pay_max INT(128) NOT NULL,
    accepted VARCHAR(256) DEFAULT ''
);
CREATE TABLE skills (
    id INT(128) AUTO_INCREMENT PRIMARY KEY not null,
    post_id INT,
    FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,
    skill varchar(256) NOT NULL
);
CREATE TABLE applies (
    id INT(128) AUTO_INCREMENT PRIMARY KEY NOT NULL,
    post_id INT,
    FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    details VARCHAR(32) NOT NULL,
    payment INT(128) NOT NULL
);
CREATE TABLE messages (
    id INT(128) AUTO_INCREMENT PRIMARY KEY NOT NULL,
    sender_id INT,
    FOREIGN KEY (sender_id) REFERENCES users(id) ON DELETE CASCADE,
    receiver_id INT,
    FOREIGN KEY (receiver_id) REFERENCES users(id) ON DELETE CASCADE,
    message VARCHAR(256) NOT NULL,
    time DATETIME NOT NULL,
    status VARCHAR(8) DEFAULT 'unread'
);


CREATE USER 'admin'@'%' IDENTIFIED BY 'ad74minp42';
GRANT ALL PRIVILEGES ON *.* TO 'admin'@'%' REQUIRE NONE WITH GRANT OPTION MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0;
GRANT ALL PRIVILEGES ON `userdb`.* TO 'admin'@'%';